VARIABLE-
-It is a container for data.

Let , Const , Var-
- let name = "shashwat";
console.log(name);

- const name = "shashwat";
console.log(name);

- var is not used after 2015 because of ES6
- in Let , varibales cannot be redeclared and can be updated.
-in const , variable cannot be redeclared or updated.

DATA TYPE- (primitve)
.number 
.string 
.boolean 
.undefined
.null
.big int (rarely used)
.symbol(rarely used)

(non-primitive)
.objects- collection of values
const student {
    fullName: shashwat,
    age:22,
    cpga:7.2l
    isPasss:true
};

**how to target , lets say age of student??
-console.log(student.age)

COMMENTS-
// , /*  */

OPERATORS-
+ - * / modolu , exponential(^), increment , decrement
a++ (post increment) - it change value in text line of code
++a (preincrement)- it will change the value first and then proceed further

-ASSIGNMENT OPERATORS-
= += -= *= %= ^=

-COMPARISON OPERATORS
== equal to
=== equal to & also check data type (strict)
!= not equal t0
!== not equal to and also check data type (strict)
> >= < <=

LOGICAL OPERATORS
and , or , not

CONDITIONAL STATEMENT

-(if statement)
let age = 22;
if (age>18){
    console.log("you can vote")
}
if (age<18){
    console.log("you cannot vote)
}

-(if else statement)
let color;
if (color=== "dark-mode"){
    color = "black";
} else {
    color ="white";
}

-(else if statement)
if (condition 1){

} else if (condition 2){

}.
 .
 .
 .
 so on

. it is used where we have to check multiple condition .

if (age <18){
    console.log("juniors")
} else if (age =18){
    console.log("mediocre")
} else if (age>18){
    console.log("senior")
}

PROMPT
-popups likes feature which is used to take inpuits from the user.

LOOPS
-it is used to execute a piece of code again and again several times.
-it is of various types such as

(for loop)
for (let i=1; i<5; i++){
    console.log("shashwat")
}

**output 
shashwat 
shashwat
shashwat
shashwat
shashwat

(while loop)
while (stooping conditional){

}

let i =1;
while (i<=5){
    console.log(i)
    i++;
}

CONSTRUCTOR

rule 1- constructor has same name as that of a class.
rule 2- constructor is somewhat like a method but not exactly a method
rule 3-constructor doesnot return anything , not even void, it only return instance of the class
rule 4- there are basically two type of constructor in java . parametrized , non parametrized.
rule 5- there is a special kind of constructor provided by java that is default constructor. if you are not creating any constructor in your class then java virtual machine is going to provide you default constructor.
rule 6-there is a mechanism of constructor chaining which every constructor does.
rule 7- when u create object of a class then constructor is automatically is invoked.
rule 8- if u want to call a constructor from another constructor inside the same class then u have to use THIS keyword . for this , THIS should be the first statement inside the constructor.

